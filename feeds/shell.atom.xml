<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>X. Wei's Blog</title><link href="http://x-wei.github.com" rel="alternate"></link><link href="http://x-wei.github.com/feeds/shell.atom.xml" rel="self"></link><id>http://x-wei.github.com</id><updated>2012-05-01T00:00:00+08:00</updated><entry><title>打乱文本的行</title><link href="http://x-wei.github.com/%E6%89%93%E4%B9%B1%E6%96%87%E6%9C%AC%E7%9A%84%E8%A1%8C.html" rel="alternate"></link><updated>2012-05-01T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/打乱文本的行.html</id><summary type="html">&lt;p&gt;今天cbl问了我一个问题: 怎样打乱一-文本文件的所有行??&lt;/p&gt;
&lt;p&gt;仔细一想, 确实有难度... 因为那个文本文件居然有1G, 用python读进内存再打乱的思路估计不行啊... 那么awk, shell什么的有没有解决方法? 搜到了一些帖子, 但是稍微复杂一点的shell脚本我也看不懂...&lt;/p&gt;
&lt;p&gt;我甚至想大概vim会提供这个功能吧, 没想到在搜的时候居然搜到了一个现成的shell命令: &lt;strong&gt;shuf&lt;/strong&gt;!!&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;shuf&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;
&lt;span class="err"&gt;用法：&lt;/span&gt; &lt;span class="n"&gt;shuf&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;选项&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;文件&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
&lt;span class="err"&gt;　或者&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;shuf&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;选项&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;参数&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;　或者&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;  &lt;span class="n"&gt;shuf&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt; &lt;span class="n"&gt;LO&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;HI&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="err"&gt;选项&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;span class="err"&gt;把输入行按随机顺序输出到标准输出。&lt;/span&gt;

&lt;span class="err"&gt;长选项必须使用的参数对于短选项时也是必需使用的。&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;e&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;echo&lt;/span&gt;            &lt;span class="err"&gt;将每个参数视为输入行&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;i&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;input&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;range&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;LO&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;HI&lt;/span&gt;   &lt;span class="err"&gt;将&lt;/span&gt;&lt;span class="n"&gt;LO&lt;/span&gt; &lt;span class="err"&gt;到&lt;/span&gt;&lt;span class="n"&gt;HI&lt;/span&gt; &lt;span class="err"&gt;的每个数字视为输入行&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;n&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;head&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;count&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;行数&lt;/span&gt;       &lt;span class="err"&gt;最多输出指定的行数&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;文件&lt;/span&gt;       &lt;span class="err"&gt;将结果输出到指定文件而非标准输出&lt;/span&gt;
      &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;random&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;source&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="err"&gt;文件&lt;/span&gt;    &lt;span class="err"&gt;从指定文件获得随机比特&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;z&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;zero&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;terminated&lt;/span&gt; &lt;span class="err"&gt;以&lt;/span&gt;&lt;span class="mi"&gt;0&lt;/span&gt; &lt;span class="err"&gt;结束行而非新行&lt;/span&gt;
      &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;        &lt;span class="err"&gt;显示此帮助信息并退出&lt;/span&gt;
      &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;     &lt;span class="err"&gt;显示版本信息并退出&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;如果没有指定文件，或者文件为"-"，则从标准输入读取。&lt;/p&gt;
&lt;p&gt;&lt;a href="mailto:请向bug-coreutils@gnu.org"&gt;请向bug-coreutils@gnu.org&lt;/a&gt; 报告shuf 的错误
GNU coreutils 项目主页：&amp;lt;&lt;a href="http://www.gnu.org/software/coreutils/"&gt;http://www.gnu.org/software/coreutils/&lt;/a&gt;&amp;gt;
GNU 软件一般性帮助：&amp;lt;&lt;a href="http://www.gnu.org/gethelp/"&gt;http://www.gnu.org/gethelp/&lt;/a&gt;&amp;gt;
请向&amp;lt;&lt;a href="http://translationproject.org/team/zh_CN.html"&gt;http://translationproject.org/team/zh_CN.html&lt;/a&gt;&amp;gt; 报告shuf 的翻译错误&lt;/p&gt;
&lt;p&gt;太好了吧! 用一个小的文本文件一试, 果然是可以的! 
&lt;code&gt;shuf [filename]&lt;/code&gt;
另外, 加上-o参数, 可以指定输出到一个新文件(估计用shell的输出重定向方法也可以吧):
&lt;code&gt;shuf [filename] -o [output_filename]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;对了, 我搜到的网址是&lt;a href="http://os.51cto.com/art/201103/246525.htm"&gt;这里&lt;/a&gt;, 介绍了一些非主流的命令. 比如另一条命令: &lt;code&gt;tac&lt;/code&gt;(&lt;code&gt;cat&lt;/code&gt;的反转), 作用是现输出文件的末端, 也很有意思.&lt;/p&gt;</summary><category term="shell"></category></entry><entry><title>用du命令查看各目录大小</title><link href="http://x-wei.github.com/use_du_shell.html" rel="alternate"></link><updated>2012-02-14T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/use_du_shell.html</id><summary type="html">&lt;p&gt;du用来计算目录的磁盘用量. 具体的参数可以用man或者--help, 这里不贴了(其实我也没仔细看...). 今天看见水源上有人说 用 -sh这个参数比较好:&lt;/p&gt;
&lt;p&gt;-s: 只计算各个目录的总用量(就是说不要递归操作) 后面跟着&lt;em&gt;或者.&lt;/em&gt;就可以查看各个目录的大小了.
-h: 易于查看的方式&lt;/p&gt;
&lt;p&gt;比如~/目录经常不知道为什么空间在减少, 那就运行:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du -sh ~/*&lt;/code&gt; 以及 &lt;code&gt;du -sh /.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;p&gt;有时候文件夹比较多的情况, 还是不容易发现那个文件夹占用了大部分空间, 这时用sort命令对du的结果进行排序就行了!
参考了&lt;a href="http://www.xn--b0t733db8c.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/12950504311.html"&gt;这里&lt;/a&gt;, 顺便学会了: 两条一起执行是用"|"进行分割的.&lt;/p&gt;
&lt;p&gt;所以命令为:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;du&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;~/*&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意这时du不能用-h参数, 因为这样的话文件可能是以M为单位也可能是以k为单位, 而sort的时候只看前面的数字值, 不看单位. 用-m参数, 表示让所有结果以M为单位显示.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="shell"></category></entry></feed>