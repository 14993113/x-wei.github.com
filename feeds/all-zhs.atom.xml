<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>X. Wei's Blog</title><link href="http://x-wei.github.com" rel="alternate"></link><link href="http://x-wei.github.com/feeds/all-zhs.atom.xml" rel="self"></link><id>http://x-wei.github.com</id><updated>2012-04-13T00:00:00+08:00</updated><entry><title>用pelican在github上创建自己的博客!</title><link href="http://x-wei.github.com/pelican_github_blog.html" rel="alternate"></link><updated>2012-04-13T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/pelican_github_blog.html</id><summary type="html">&lt;p&gt;折腾了许久, 终于把&lt;a href="http://x-wei.github.com"&gt;我的博客&lt;/a&gt;搞得差不多了, 在此写一个总结, 以免自己以后忘了, 并且给和我一样菜的人提供一点参考....&lt;/p&gt;
&lt;h2&gt;先扯点别的&lt;/h2&gt;
&lt;p&gt;其实啊, 很早就想要建立自己的博客, 把值得分享的东西拿出来放到网上, 但是又不屑于使用网易, 百度等提供的现成服务, 技术又很菜... 于是一直拖着. zim的出现让我很欣喜--zim可以写类似于博客的东西(不过是给自己看的~), 记录有价值的内容. 但是怎么把我的一些总结放到网上?? 我先后考虑了这些东西:&lt;/p&gt;
&lt;p&gt;googlesite--&amp;gt;wordpress--&amp;gt;jekyll+github--&amp;gt;pelican+github&lt;/p&gt;
&lt;p&gt;googlesite是个很好的工具, &lt;strong&gt;很容易上手&lt;/strong&gt;(google好赞...), 我曾经用它做过一个个人页面. 但是这种傻瓜工具的缺点就是: 没法自己定制... 当我发现googlesite的bolg页面不支持标签云的时候, 就决定不用它了... 况且googlesite在国内需要修改一下host才能访问... &lt;/p&gt;
&lt;p&gt;然后是wordpress, 这个似乎目前也是最流行的网页制作工具, 我看到了很多很多大牛小牛使用WP搭建的自己的网站, 而且都是自己的顶级域名, 看上去就灰常霸气~ 当我终于有空折腾, 兴冲冲地研究WP时, 却发现&lt;strong&gt;顶级域名注册都是要交钱的&lt;/strong&gt;, 还要弄什么vpn...这... 大概不适合我...&lt;/p&gt;
&lt;p&gt;在我纠结的时候, 请教了&lt;a href="http://www.dofine.me/"&gt;dofine&lt;/a&gt;同学, 他推荐我使用&lt;a href="http://help.github.com/pages/"&gt;github pages&lt;/a&gt;(后来证明这是非常正确的~). 早就听说git大名, 只是我太菜了... 不知能不能搞定啊... 还好可以随时询问dofine同学(有时我的问题很弱智, 他还是很耐心的回答, 真好~). github page弄好后, 要按装jekyll作为&lt;strong&gt;静态页面&lt;/strong&gt;的生成工具. 在使用zim的时候, 我就对轻量级标记语言非常喜欢, jekyll可以使用Markdown格式(比zim的wiki语法还要简洁), 所以说应该是非常好的选择. &lt;strong&gt;但是我在jekyll的安装这一步卡住了&lt;/strong&gt;... 由于我用的是ubuntu10.04, 安装各种报错... 更新了rubygem之后以为成功了, 但是运行jekyll还是不行... 折腾了两天后, 我决定暂时放弃了...&lt;/p&gt;
&lt;p&gt;就在纠结之时, 报着试一试的态度, 在&lt;a href="https://bbs.sjtu.edu.cn/file/bbs/index/index.htm"&gt;yssy&lt;/a&gt; 的gnu/linux版上问了一下, 得到了 &lt;a href="http://farseerfc.github.com/"&gt;farseerfc&lt;/a&gt; 学长非常热情耐心的回答. 他建议我&lt;a href="http://farseerfc.github.com/try-pelican-zhs.html"&gt;采用pelican&lt;/a&gt;来生成静态页面, 这是一个法国人用python写的程序. 我很容易就安装好了, 然后又折腾了许久, 现在终于基本搞定...... 感觉pelican还是相当不错的选择, 配置好了之后就可以安心写文章了...&lt;/p&gt;
&lt;h2&gt;第一步: 生成github page&lt;/h2&gt;
&lt;p&gt;第一步要做的就是注册github, 生成一个自己的二级域名(比如我的x-wei.github.com). 注册和配置SSH密钥过程&lt;a href="http://help.github.com/linux-set-up-git/"&gt;help page&lt;/a&gt;写得很清楚, 虽然我连SSH是什么都搞不清, 按它说的一步一步做, 很容易就搞定了.&lt;/p&gt;
&lt;p&gt;然后要新建一个repo(中文翻译成"依赖"?), 注意&lt;strong&gt;这个repo需要命名成: your_id.github.com&lt;/strong&gt;, 所以一个id只能生成一个啦... 生成这个repo后会有提示, 运行一下mkdir, git init什么的就OK了.&lt;/p&gt;
&lt;p&gt;这样, 建立好了your_id.github.com的repo之后, 只要把一个index.html文件上传到master分支, 就可以访问your_id.github.com看到那个index.html文件了~&lt;/p&gt;
&lt;h2&gt;第二步: 安装和使用pelican&lt;/h2&gt;
&lt;p&gt;pelican的安装需要用到pip:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$sudo apt-get install python-pip&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;然后再用pip安装pelican:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$sudo pip install pelican&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;这样, 安装就完成了~&lt;/p&gt;
&lt;p&gt;pelican的使用很简单, 这是帮助信息:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$&lt;/span&gt; &lt;span class="nv"&gt;pelican&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;
&lt;span class="n"&gt;usage:&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;MARKUP&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;SETTINGS&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt; &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;
               &lt;span class="p"&gt;[&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="p"&gt;]&lt;/span&gt;

&lt;span class="n"&gt;A&lt;/span&gt; &lt;span class="n"&gt;tool&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;generate&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;static&lt;/span&gt; &lt;span class="n"&gt;blog&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt; &lt;span class="n"&gt;restructured&lt;/span&gt; &lt;span class="n"&gt;text&lt;/span&gt; &lt;span class="n"&gt;input&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;

&lt;span class="n"&gt;positional&lt;/span&gt; &lt;span class="n"&gt;arguments:&lt;/span&gt;
  &lt;span class="n"&gt;path&lt;/span&gt;                  &lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;content&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;

&lt;span class="n"&gt;optional&lt;/span&gt; &lt;span class="n"&gt;arguments:&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;h&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;help&lt;/span&gt;            &lt;span class="n"&gt;show&lt;/span&gt; &lt;span class="n"&gt;this&lt;/span&gt; &lt;span class="n"&gt;help&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;t&lt;/span&gt; &lt;span class="n"&gt;THEME&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;theme&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;path&lt;/span&gt; &lt;span class="n"&gt;THEME&lt;/span&gt;
                        &lt;span class="n"&gt;Path&lt;/span&gt; &lt;span class="n"&gt;where&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;find&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;theme&lt;/span&gt; &lt;span class="n"&gt;templates&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt;
                        &lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;itwill&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;default&lt;/span&gt; &lt;span class="n"&gt;one&lt;/span&gt; &lt;span class="n"&gt;included&lt;/span&gt; &lt;span class="n"&gt;with&lt;/span&gt;
                        &lt;span class="n"&gt;pelican&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;o&lt;/span&gt; &lt;span class="n"&gt;OUTPUT&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;OUTPUT&lt;/span&gt;
                        &lt;span class="n"&gt;Where&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;generated&lt;/span&gt; &lt;span class="n"&gt;files&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;If&lt;/span&gt; &lt;span class="ow"&gt;not&lt;/span&gt; &lt;span class="n"&gt;specified&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
                        &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt; &lt;span class="n"&gt;will&lt;/span&gt; &lt;span class="n"&gt;be&lt;/span&gt; &lt;span class="n"&gt;created&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;named&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;output&amp;quot;&lt;/span&gt; &lt;span class="n"&gt;in&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt;
                        &lt;span class="n"&gt;current&lt;/span&gt; &lt;span class="n"&gt;path&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;m&lt;/span&gt; &lt;span class="n"&gt;MARKUP&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;markup&lt;/span&gt; &lt;span class="n"&gt;MARKUP&lt;/span&gt;
                        &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;list&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;markup&lt;/span&gt; &lt;span class="n"&gt;language&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="k"&gt;use&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="n"&gt;rst&lt;/span&gt; &lt;span class="ow"&gt;or&lt;/span&gt; &lt;span class="n"&gt;md&lt;/span&gt;&lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Please&lt;/span&gt;
                        &lt;span class="n"&gt;indicate&lt;/span&gt; &lt;span class="n"&gt;them&lt;/span&gt; &lt;span class="n"&gt;separated&lt;/span&gt; &lt;span class="n"&gt;by&lt;/span&gt; &lt;span class="n"&gt;commas&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;s&lt;/span&gt; &lt;span class="n"&gt;SETTINGS&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;SETTINGS&lt;/span&gt;
                        &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;settings&lt;/span&gt; &lt;span class="n"&gt;of&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;application&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="n"&gt;Default&lt;/span&gt; &lt;span class="n"&gt;to&lt;/span&gt; &lt;span class="n"&gt;False&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;d&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="nb"&gt;delete&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;output&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;directory&lt;/span&gt;
                        &lt;span class="n"&gt;Delete&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;output&lt;/span&gt; &lt;span class="n"&gt;directory&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;v&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;verbose&lt;/span&gt;         &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;q&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;quiet&lt;/span&gt;           &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;only&lt;/span&gt; &lt;span class="n"&gt;critical&lt;/span&gt; &lt;span class="n"&gt;errors&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;D&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;debug&lt;/span&gt;           &lt;span class="n"&gt;Show&lt;/span&gt; &lt;span class="n"&gt;all&lt;/span&gt; &lt;span class="n"&gt;message&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;including&lt;/span&gt; &lt;span class="n"&gt;debug&lt;/span&gt; &lt;span class="n"&gt;messages&lt;/span&gt;
  &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;version&lt;/span&gt;             &lt;span class="n"&gt;Print&lt;/span&gt; &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="n"&gt;version&lt;/span&gt; &lt;span class="ow"&gt;and&lt;/span&gt; &lt;span class="nb"&gt;exit&lt;/span&gt;
  &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;r&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="o"&gt;--&lt;/span&gt;&lt;span class="n"&gt;autoreload&lt;/span&gt;      &lt;span class="n"&gt;Relaunch&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt; &lt;span class="nb"&gt;each&lt;/span&gt; &lt;span class="nb"&gt;time&lt;/span&gt; &lt;span class="n"&gt;a&lt;/span&gt; &lt;span class="n"&gt;modification&lt;/span&gt; &lt;span class="n"&gt;occurs&lt;/span&gt; &lt;span class="n"&gt;on&lt;/span&gt;
                        &lt;span class="n"&gt;the&lt;/span&gt; &lt;span class="n"&gt;contentfiles&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;额, 其实那些参数可以先无视(直接用默认参数)... 那么用法就很简单了: &lt;strong&gt;$pelican [path]&lt;/strong&gt;, 其中, path是放置markdown或rst文件的目录. 如果手头有几篇.md文件或.rst文件, 那么只要:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$pelican [.md/.rst文件所在目录]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;就会看到效果了... 大概会在一个'output'目录里, 打开index.html就可以看到生成的页面, 只要把这些生成的文件push到github的master分支, 你的博客就建好了~~&lt;/p&gt;
&lt;p&gt;另外, 把.md文件分别放在几个子目录, 那么生成的页面显示属于不同分类的文章了~&lt;/p&gt;
&lt;p&gt;关于pelican的配置, 待会再说, 先说说git的上传...&lt;/p&gt;
&lt;h2&gt;第三步: 编辑.md/.rst文件&lt;/h2&gt;
&lt;p&gt;markdown和rst都是非常优秀的轻量级标记语言, 可以很方便的写出整洁漂亮的笔记, 编写博客文章只要写成一个一个的.md或.rst文件然后交给pelican就OK了.&lt;/p&gt;
&lt;p&gt;关于这两种格式的语法, 其实我自己还不太熟悉呢... 网上有不少教程, 比如这个&lt;a href="http://wowubuntu.com/markdown/"&gt;markdown的教程&lt;/a&gt;和&lt;a href="http://readthedocs.org/docs/beinggeekbook/en/latest/rst.html"&gt;这个ReST教程&lt;/a&gt;...&lt;/p&gt;
&lt;p&gt;需要注意的是, 在文章的开头要指定一下博客的信息: 博客标题, 时间, 标签... pelican的帮助页面各提供了一个示例(我稍微修改了一下):&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;.rst示例&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="n"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="c1"&gt;##############&lt;/span&gt;

&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;date:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mo"&gt;03&lt;/span&gt; &lt;span class="mi"&gt;10&lt;/span&gt;&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;tags:&lt;/span&gt; &lt;span class="n"&gt;tag1&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag2&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;category:&lt;/span&gt; &lt;span class="n"&gt;yeah&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;如果把这个&lt;/span&gt;&lt;span class="n"&gt;rst&lt;/span&gt;&lt;span class="err"&gt;文件放在&lt;/span&gt;&lt;span class="n"&gt;posts&lt;/span&gt;&lt;span class="o"&gt;/&lt;/span&gt;&lt;span class="err"&gt;下的子目录的话&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;那么这一行可以省略&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;默认把子文件夹名作为分类&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;author:&lt;/span&gt; &lt;span class="n"&gt;Alexis&lt;/span&gt; &lt;span class="n"&gt;Metaireau&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;由于&lt;/span&gt;&lt;span class="n"&gt;settings&lt;/span&gt;&lt;span class="err"&gt;文件已经指定了作者&lt;/span&gt;&lt;span class="o"&gt;.&lt;/span&gt; &lt;span class="err"&gt;这一行可以省略&lt;/span&gt;
&lt;span class="p"&gt;:&lt;/span&gt;&lt;span class="n"&gt;slug:&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt; &lt;span class="sr"&gt;//&lt;/span&gt;&lt;span class="err"&gt;这个是指定生成页面的名称&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="err"&gt;比如这个是指定生成的页面名字是&lt;/span&gt;&lt;span class="s"&gt;&amp;quot;test-blog.html&amp;quot;&lt;/span&gt;

&lt;span class="err"&gt;这里写博客内容&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;.md示例&lt;/strong&gt;&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;Date&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="mi"&gt;2010&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;12&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="mi"&gt;03&lt;/span&gt;
&lt;span class="n"&gt;Title&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;My&lt;/span&gt; &lt;span class="kd"&gt;super&lt;/span&gt; &lt;span class="n"&gt;title&lt;/span&gt;
&lt;span class="n"&gt;Slug&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;test&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;blog&lt;/span&gt;
&lt;span class="n"&gt;Tags&lt;/span&gt;&lt;span class="o"&gt;:&lt;/span&gt; &lt;span class="n"&gt;tag1&lt;/span&gt;&lt;span class="o"&gt;,&lt;/span&gt; &lt;span class="n"&gt;tag2&lt;/span&gt;

&lt;span class="err"&gt;这里写博客内容&lt;/span&gt;&lt;span class="o"&gt;...&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;&lt;strong&gt;另: 关于编辑器&lt;/strong&gt;
编辑这类文件时最好能够预览效果, linux下用&lt;a href="http://wowubuntu.com/retext.html"&gt;ReText&lt;/a&gt;即可~ &lt;/p&gt;
&lt;h2&gt;第四步: 把生成的文件上传到github&lt;/h2&gt;
&lt;p&gt;以前没用过git, 所以这个让我困惑了很长时间... &lt;/p&gt;
&lt;p&gt;首先, 应该在your_id.github.com页面下有一个.git文件夹(大概是git init生成的吧), 然后, 把生成好了的那些文件(比如上一步的output文件夹里的东西)放在这个目录下, 依次运行一下三个命令:
    $git add .
    $git commit -am "your commit message"
    $git push
额 是的, 需要三条命令才能完成上传... 另外, 貌似这样会覆盖掉原先的那些文件, 不必担心, github有history功能(我的理解 可能跟快照有点类似吧), 原先的东西应该可以找回来...&lt;/p&gt;
&lt;p&gt;push完成后, 你的注册邮箱会收到邮件"page built successful", 如果是第一次生成的话, 最多等10分钟, 你就可以访问your_id.github.com看到效果啦~~&lt;/p&gt;
&lt;h2&gt;第五步: pelican的进一步配置&lt;/h2&gt;
&lt;p&gt;如果按照默认的参数, 直接$pelican path的话, 估计不会得到让你满意的页面--至少网站名字要改一下吧!! 还有, 默认的主题没有标签云, 反正我比较想要这个功能... &lt;/p&gt;
&lt;p&gt;farseerfc给了一个&lt;a href="https://github.com/farseerfc/farseerfc.github.com/blob/master/settings.py"&gt;settings.py&lt;/a&gt;配置文件, 各个变量的名字含义应该比较清楚, 或者看pelican的&lt;a href="http://readthedocs.org/docs/pelican/en/2.8/settings.html"&gt;帮助页面&lt;/a&gt;, 这个页面也提供了一个示例配置文件. 可以在这俩配置文件基础上进行修改... 修改完成了之后, 运行pelican时加上-s参数指定settings.py作为配置文件:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$pelican -s settings.py [.md/.rst文件所在目录]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;我是从farseerfc的配置文件改的, 大概是这个样子:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="c1"&gt;# -*- coding: utf-8 -*-&lt;/span&gt;
&lt;span class="nb"&gt;import&lt;/span&gt; &lt;span class="n"&gt;sys&lt;/span&gt;

&lt;span class="n"&gt;TIMEZONE&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;Asia/Shanghai&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_LANG&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;zhs&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;X. Wei&amp;#39;s Blog&amp;quot;&lt;/span&gt;
&lt;span class="n"&gt;AUTHOR&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;X.Wei&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DISQUS_SITENAME&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;xweisblog&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GITHUB_URL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;https://github.com/X-Wei&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;#github链接&lt;/span&gt;
&lt;span class="n"&gt;SITEURL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;http://x-wei.github.com&amp;gt;&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;GOOGLE_ANALYTICS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;UA-30756331-1&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;#谷歌站点分析&lt;/span&gt;
&lt;span class="n"&gt;TAG_FEED&lt;/span&gt;  &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;feeds/%s.atom.xml&amp;#39;&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_PAGINATION&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="mi"&gt;4&lt;/span&gt;&lt;span class="c1"&gt;#默认每一页有多少篇文章&lt;/span&gt;

&lt;span class="n"&gt;DEFAULT_CATEGORY&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;misc&amp;#39;&lt;/span&gt;
&lt;span class="n"&gt;OUTPUT_PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;.&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#需要把输出路径从默认的&amp;#39;output&amp;#39;改成根目录(your_id.github.com目录), 因为githubpage需要把index.html上传到repo的master分支的根目录才可以!&lt;/span&gt;
&lt;span class="n"&gt;PATH&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;posts&amp;#39;&lt;/span&gt;&lt;span class="c1"&gt;#这个是指定放置.md/.rst文件的目录&lt;/span&gt;

&lt;span class="n"&gt;LINKS&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;((&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;dofine&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;http://www.dofine.me&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;farseerfc&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;quot;&amp;lt;http://farseerfc.github.com/&amp;gt;&amp;quot;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
         &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#友情链接~&lt;/span&gt;

&lt;span class="n"&gt;SOCIAL&lt;/span&gt; &lt;span class="o"&gt;=&lt;/span&gt; &lt;span class="p"&gt;(&lt;/span&gt;
          &lt;span class="p"&gt;(&lt;/span&gt;&lt;span class="s"&gt;&amp;#39;github&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt; &lt;span class="s"&gt;&amp;#39;&amp;lt;https://github.com/x-wei&amp;gt;&amp;#39;&lt;/span&gt;&lt;span class="p"&gt;),&lt;/span&gt;
          &lt;span class="p"&gt;)&lt;/span&gt;&lt;span class="c1"&gt;#社交网络链接&lt;/span&gt;
          &lt;span class="c1"&gt;#~ (&amp;#39;twitter&amp;#39;, &amp;#39;&amp;lt;http://twitter.com/farseerfc&amp;gt;&amp;#39;),&lt;/span&gt;
          &lt;span class="c1"&gt;#~ (&amp;#39;facebook&amp;#39;, &amp;#39;&amp;lt;http://www.facebook.com/farseerfc&amp;gt;&amp;#39;),&lt;/span&gt;
          &lt;span class="c1"&gt;#~ (&amp;#39;weibo&amp;#39;, &amp;#39;&amp;lt;http://weibo.com/farseerfc&amp;gt;&amp;#39;),&lt;/span&gt;
          &lt;span class="c1"&gt;#~ (&amp;#39;renren&amp;#39;, &amp;#39;&amp;lt;http://www.renren.com/farseer&amp;gt;&amp;#39;),&lt;/span&gt;

&lt;span class="c1"&gt;#这个是farseerfc同学自己加的, 可以显示他的新浪微博内容, 有微博的话可以把这些加上~&lt;/span&gt;
&lt;span class="c1"&gt;#~ TWITTER_USERNAME = &amp;#39;farseerfc&amp;#39;&lt;/span&gt;
&lt;span class="c1"&gt;#~ SIDEBAR_CUSTOM = r&amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#~ &amp;lt;li class=&amp;quot;nav-header&amp;quot;&amp;gt;&amp;lt;h4&amp;gt;&amp;lt;i class=&amp;quot;icon-list-alt&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;Weibo&amp;lt;/h4&amp;gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#~ &amp;lt;iframe width=&amp;quot;100%&amp;quot; height=&amp;quot;550&amp;quot; class=&amp;quot;share_self&amp;quot;  frameborder=&amp;quot;0&amp;quot; scrolling=&amp;quot;no&amp;quot; &lt;/span&gt;
&lt;span class="c1"&gt;#~ src=&amp;quot;&amp;lt;http://widget.weibo.com/weiboshow/index.php?language=&amp;amp;width=0&amp;amp;height=550&amp;amp;fansRow=1&amp;amp;ptype=1&amp;amp;speed=0&amp;amp;skin=2&amp;amp;isTitle=1&amp;amp;noborder=1&amp;amp;isWeibo=1&amp;amp;isFans=1&amp;amp;uid=1862842353&amp;amp;verifier=b193b9de&amp;amp;dpc=1&amp;gt;&amp;quot;&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#~ &amp;lt;/iframe&amp;gt;&lt;/span&gt;
&lt;span class="c1"&gt;#~ &amp;quot;&amp;quot;&amp;quot;&lt;/span&gt;

&lt;span class="c1"&gt;#google自定义搜索(大概是站内搜索吧)&lt;/span&gt;
&lt;span class="c1"&gt;#~ GOOGLE_CUSTOM_SEARCH_SIDEBAR = &amp;quot;001578481551708017171:axpo6yvtdyg&amp;quot;&lt;/span&gt;
&lt;span class="c1"&gt;#~ GOOGLE_CUSTOM_SEARCH_NAVBAR = &amp;quot;001578481551708017171:hxkva69brmg&amp;quot;&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;由于配置文件里已经包含了PATH和OUTPUT_PATH什么的, 所以运行只要:&lt;code&gt;$pelican -s settings.py&lt;/code&gt;即可~&lt;/p&gt;
&lt;p&gt;然后, 关于主题模板, 可以使用-t参数指定主题. pelican目前主题在&lt;a href="https://github.com/farseerfc/pelican-themes"&gt;github&lt;/a&gt;上, 可以用$git clone &lt;a href="https://github.com/farseerfc/pelican-themes"&gt;https://github.com/farseerfc/pelican-themes&lt;/a&gt; 下载, 然后使用主题的话就是:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$pelican -s settings.py -t [主题所在目录] [.md/.rst文件所在目录]&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;如果想生成后就预览一下, 那就写:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$pelican -s settings.py -t [主题所在目录] [.md/.rst文件所在目录] | xdg-open index.html&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;个人感觉还是bootstrap2主题比较好... 目前由于pelican使用的人不多, 所以主题也就那十几个... &lt;/p&gt;
&lt;h2&gt;再罗嗦一下: 关于一些问题的解决方法&lt;/h2&gt;
&lt;p&gt;这几天折腾pelican很久很久, 发现以下几个问题:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;不支持多层分类?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;--这个目前没法解决, 不过既然有标签功能, 分类不能多层也无所谓啦...&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;安装后不支持Markdown语法?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个是因为Markdown没有与pelican包一起安装(pelican默认的还是支持rst格式), 安装上Markdown包就行了:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;$sudo pip install Markdown&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何插图?&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里不是讨论markdown语法如何插图, 而是怎么让生成的网页有图片. 其实很简单, 把.md文件里引用的图片复制一份到static目录即可~ (其实剪切也是可以的, 只不过那样的话编辑预览时就看不见图片了...)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;中文tag不支持?(事后证明其实是支持的, 是我搞得不支持了...)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;pelican2.8(当前版本)是支持中文tag的! 我一开始直接git clone了3.0的源码, 然后不支持了... 需要重装pelican:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="nv"&gt;$sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;uninstall&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;span class="nv"&gt;$sudo&lt;/span&gt; &lt;span class="n"&gt;pip&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;pelican&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;ul&gt;
&lt;li&gt;不支持中文文件名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这个我没解决, 无所谓, 起一个英文文件名(.md文件以及Slug最好都用英文吧)好了, 毕竟博客标题(Title)是可以用中文的~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OK, 就写这些吧... (累死了...)&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;(我发现几乎所有文章都是从zim里搬来的, so, 以后就不在文章最后标注"imported from zim"了...)&lt;/p&gt;</summary><category term="pelican"></category><category term="git"></category></entry><entry><title>Hello World!</title><link href="http://x-wei.github.com/hello-world.html" rel="alternate"></link><updated>2012-04-09T20:39:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/hello-world.html</id><summary type="html">&lt;p&gt;建立起了我的github博客~!&lt;/p&gt;
&lt;p&gt;作为一个很菜的低端桌面(ubuntu, gnome)用户, 这个还是相当不容易啊~~&lt;/p&gt;
&lt;p&gt;本来考虑使用的是jekyll, 但是安装过程老是报错... 最终选择了pelican生成静态页面, 这个工具很好用, 只是目前关注度不足啊~ 关于pelican的介绍可以参考
&lt;a class="reference external" href="http://farseerfc.github.com/try-pelican.html"&gt;这里&lt;/a&gt;
, jekyll我折腾了N久没有搞定, 而pelican很快就装好了~ 非常感谢
&lt;a class="reference external" href="http://farseerfc.github.com/index.html"&gt;farseerfc&lt;/a&gt;
同学, 非常耐心地回答我这个菜鸟的问题... 不过还是自力更生比较好, 好好看它的
&lt;a class="reference external" href="http://readthedocs.org/docs/pelican/en/2.8/"&gt;文档&lt;/a&gt;
吧~&lt;/p&gt;
&lt;p&gt;另外, 我之前用
&lt;a class="reference external" href="http://zim-wiki.org/"&gt;zim&lt;/a&gt;
写了一些笔记, 准备把值得分享的部分放到blog上来. zim0.56刚刚开始支持把笔记导出成markdown格式, 这实在是太棒啦!!&lt;/p&gt;
</summary><category term="pelican"></category></entry><entry><title>使用google doc建立在线调查表!~</title><link href="http://x-wei.github.com/google_doc_form.html" rel="alternate"></link><updated>2012-03-21T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/google_doc_form.html</id><summary type="html">&lt;p&gt;在线办公我以前试过zoho, 但是一个xls文件有多个人同时编辑时会有问题...&lt;/p&gt;
&lt;p&gt;昨天收到学长关于春游的&lt;a href="https://docs.google.com/spreadsheet/viewform?formkey=dDhzYnRNVHFReXRoanlpZWRyYjM4Y2c6MQ"&gt;调查表&lt;/a&gt;, 居然是用google doc做的, 很给力. 我早就想做一个分布式通讯录, 所以研究了一下. 越来越感觉google提供的服务(google doc, google site, google project)太方便了!!!&lt;/p&gt;
&lt;h2&gt;建立&lt;/h2&gt;
&lt;p&gt;大概的流程是这样的:
用google帐号进入google doc, 然后点击creat-&amp;gt;form, 会看到这样的页面:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯, 功能是比较简单但是够用!
点击add item 或者右边俩方框的按钮, 就可以添加问题了, 很easy, 我做的同学录是这个样子的:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image001.png" /&gt;&lt;/p&gt;
&lt;p&gt;然后还可以选择主题...&lt;/p&gt;
&lt;h2&gt;发布&lt;/h2&gt;
&lt;p&gt;编辑完成之后, 就可以发布了, 点击右上角的"Share"(有个g+的图标, 我一开始以为是像人人那样的分享呢...), 之后页面底部就会有一个链接~! 把这个链接发给别人, 别人就可以提交了~&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image002.png" /&gt;&lt;/p&gt;
&lt;p&gt;btw, 如果不想发布, 只想发给几个人看的话, 点击share右边的那个"email this form"按钮, 输入联系人的邮箱地址即可~&lt;/p&gt;
&lt;h2&gt;统计&lt;/h2&gt;
&lt;p&gt;那么别人提交之后, 我怎么看统计结果呢? 进入google doc, 会发现刚才建立的form的结果在一个表单里:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image003.png" /&gt;&lt;/p&gt;
&lt;p&gt;点进去看, 就可以看到大家的回复统计&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image004.png" /&gt;&lt;/p&gt;
&lt;p&gt;看! 多方便!!
然后, 可以把这个文件共享给别人: 右键-&amp;gt;share:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image005.png" /&gt;&lt;/p&gt;
&lt;h2&gt;发布后的修改&lt;/h2&gt;
&lt;p&gt;那么, form发布后, 还可不可以再修改呢? --可以! 打开google doc里的表单, form-&amp;gt;edit form, 就会弹出编辑form的窗口啦!!&lt;/p&gt;
&lt;p&gt;注意那个more action里面的confirmation, 不要勾选"publish response summery"...否则任何人提交后就可以看到目前所有的信息了...&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./google_doc_form/pasted_image006.png" /&gt;&lt;/p&gt;
&lt;h2&gt;一点不足&lt;/h2&gt;
&lt;p&gt;就是一旦发布了, 任何有这个链接的人都可以填这个表格... 没有密码之类的...
我的方法是设置一个必填的"验证问题"项, 只有回答对了验证问题的人, 我才发给他同学录...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="google"></category></entry><entry><title>自定义nautilus的菜单栏</title><link href="http://x-wei.github.com/nautilus-menu.html" rel="alternate"></link><updated>2012-03-08T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/nautilus-menu.html</id><summary type="html">&lt;p&gt;Nautilus是gnome的默认文件浏览器, 那次更新安装了elementory主题的Nautilus之后, 发现菜单栏少了些很常用的功能: 比如上一层,主页, 刷新等...&lt;/p&gt;
&lt;p&gt;其实可以自定义的, 编辑-&amp;gt;customize toolbar:
&lt;img alt="" src="./nautilus-menu/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;顺便提一下, 发现了些方便的快捷键:
alt+up: 父目录
alt+left: 返回
~~alt+home: 到~/~~(不好使?)
F2: 重命名
F5/ctrl+R: 刷新
ctrl+L: 输入位置地址
ctrl+H:显示隐藏文件&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="外观"></category><category term="快捷键"></category></entry><entry><title>无聊中的发现--递归截图~</title><link href="http://x-wei.github.com/recursion-scr-shot.html" rel="alternate"></link><updated>2012-03-08T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/recursion-scr-shot.html</id><summary type="html">&lt;p&gt;就放一张图片, 知道怎么做的吗?~&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./recursion-scr-shot/Screenshot-7.png" /&gt;&lt;/p&gt;
&lt;p&gt;btw, 真心感觉zim可以作为一个写给自己的博客了, 不仅仅是记笔记... BON!~&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--imported from zim&lt;/strong&gt;&lt;/p&gt;</summary></entry><entry><title>tex插入程序代码--so easy~</title><link href="http://x-wei.github.com/tex_insert_code.html" rel="alternate"></link><updated>2012-03-03T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/tex_insert_code.html</id><summary type="html">&lt;p&gt;这个问题... 我本来想用python解决的...&lt;/p&gt;
&lt;p&gt;但是显然应该先搜一下吧... 果然, 早就有人解决了(其实是tex的常用命令里就有的), 比如&lt;a href="http://hi.baidu.com/xuelicheng/blog/item/194c844a22d2452a09f7ef8a.html"&gt;这里&lt;/a&gt;...&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;usepackage&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;listings&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lstset&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;这条命令可以让&lt;/span&gt;&lt;span class="nv"&gt;LaTeX&lt;/span&gt;&lt;span class="err"&gt;排版时将&lt;/span&gt;&lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt;&lt;span class="err"&gt;键字突出显示&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lstset&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;breaklines&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;这条命令可以让&lt;/span&gt;&lt;span class="nv"&gt;LaTeX&lt;/span&gt;&lt;span class="err"&gt;自动将长的代码行换行排版&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lstset&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;extendedchars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;false&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;这一条命令可以解决代码跨页时，章节标题，页眉等汉字不显示的问题&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nv"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="nv"&gt;%paste&lt;/span&gt; &lt;span class="n"&gt;your&lt;/span&gt; &lt;span class="n"&gt;C&lt;/span&gt;&lt;span class="o"&gt;++&lt;/span&gt; &lt;span class="n"&gt;code&lt;/span&gt; &lt;span class="n"&gt;here&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;``&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;很简单的... 不过比较长的代码换行显示不是很爽(貌似不换行也不是办法啊)... 另外没有颜色高亮哎...&lt;/p&gt;
&lt;p&gt;嗯, 貌似&lt;a href="http://bbs.chinatex.org/forum.php?mod=viewthread&amp;amp;tid=3692"&gt;这里&lt;/a&gt;的介绍更详细...
还有这个人的&lt;a href="http://aifreedom.com/technology/170"&gt;博客&lt;/a&gt;...
&lt;a href="http://blog.sina.com.cn/s/blog_5e16f1770100o9ef.html"&gt;这篇文章&lt;/a&gt;是针对python的高亮...&lt;/p&gt;
&lt;p&gt;总结一下, 这样比较好:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="sb"&gt;``&lt;/span&gt;&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;documentclass&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;article&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;usepackage&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;listings&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;usepackage&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;xcolor&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;usepackage&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;xeCJK&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;  &lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;必须加&lt;/span&gt;&lt;span class="nv"&gt;xeCJK&lt;/span&gt;&lt;span class="err"&gt;包&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;setCJKmainfont&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;WenQuanYi&lt;/span&gt; &lt;span class="n"&gt;Micro&lt;/span&gt; &lt;span class="n"&gt;Hei&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;lstset&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;numbers&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;left&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;numberstyle&lt;/span&gt;&lt;span class="o"&gt;=\&lt;/span&gt;&lt;span class="n"&gt;tiny&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;keywordstyle&lt;/span&gt;&lt;span class="o"&gt;=\&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;70&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt; &lt;span class="n"&gt;commentstyle&lt;/span&gt;&lt;span class="o"&gt;=\&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;50&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="n"&gt;frame&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;shadowbox&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;rulesepcolor&lt;/span&gt;&lt;span class="o"&gt;=\&lt;/span&gt;&lt;span class="n"&gt;color&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;red&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;green&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="n"&gt;blue&lt;/span&gt;&lt;span class="o"&gt;!&lt;/span&gt;&lt;span class="mi"&gt;20&lt;/span&gt;&lt;span class="p"&gt;},&lt;/span&gt;
&lt;span class="n"&gt;breaklines&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;&lt;span class="p"&gt;,&lt;/span&gt;
&lt;span class="n"&gt;extendedchars&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="n"&gt;true&lt;/span&gt;
&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;begin&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}[&lt;/span&gt;&lt;span class="n"&gt;language&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;Python&lt;/span&gt;&lt;span class="p"&gt;}]&lt;/span&gt;
&lt;span class="nv"&gt;%&lt;/span&gt;&lt;span class="err"&gt;这里插入代码~&lt;/span&gt;
&lt;span class="err"&gt;\&lt;/span&gt;&lt;span class="nv"&gt;end&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;lstlisting&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;
&lt;span class="o"&gt;\&lt;/span&gt;&lt;span class="n"&gt;end&lt;/span&gt;&lt;span class="p"&gt;{&lt;/span&gt;&lt;span class="n"&gt;document&lt;/span&gt;&lt;span class="p"&gt;}&lt;/span&gt;&lt;span class="sb"&gt;``&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;附件: 我做的一个简单实例
&lt;a href="./tex_insert_code/insertcode2.tex"&gt;./insertcode2.tex&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="tex"></category></entry><entry><title>xelatex--linux下tex中文的完全解决!</title><link href="http://x-wei.github.com/xelatex_zh.html" rel="alternate"></link><updated>2012-02-27T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/xelatex_zh.html</id><summary type="html">&lt;p&gt;前几天校内上看见了这个&lt;a href="http://page.renren.com/601024697/note/806581340?ref=share"&gt;latex中文指南&lt;/a&gt;, 想试一试...&lt;/p&gt;
&lt;p&gt;可是貌似不给力(or我没做对)安装了texlive之后还是不能编译它的测试源文件...&lt;/p&gt;
&lt;p&gt;搜索发现了&lt;a href="http://blog.sina.com.cn/s/blog_4c20fe7b0100vjbj.html"&gt;这样一篇&lt;/a&gt;非常强大的文章... 这货直接把他的源文件放上去了... 不过这样的话他的文章可读性就不好了...&lt;/p&gt;
&lt;p&gt;要进行的操作:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;sudo&lt;/span&gt; &lt;span class="n"&gt;apt&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;get&lt;/span&gt; &lt;span class="n"&gt;install&lt;/span&gt; &lt;span class="n"&gt;texlive&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xetex&lt;/span&gt; &lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;cjk&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;xcjk&lt;/span&gt; &lt;span class="n"&gt;texlive&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;latex&lt;/span&gt;&lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;recommended&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;其实好像这样之后就可以用中文了(按博客里的意思), 可惜我用的geany开始使用latex编译的, 老是报错...&lt;/p&gt;
&lt;p&gt;其实应该用命令行 xelatex xx.tex就应该好使了...&lt;/p&gt;
&lt;p&gt;然后我又按照博客里的提示安装了Gummi...... 一个可以在右面看到效果的texIDE... 还是不行, 因为默认的编译器都是latex不是xelatex...&lt;/p&gt;
&lt;p&gt;当然我最终发现了要用xelatex, 那么老是用命令行也不大方便... gummi里面找到了设置:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./xelatex_zh/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;这样就好了...&lt;/p&gt;
&lt;p&gt;但是我现在已经非常喜欢geany了, 不想因为tex再单独用一个编辑环境... 还好找到了geany里面的设置: 生成--&amp;gt;设置生成命令, 在里面添加一个xelatex就行啦!~ 嗯 还是geany亲切~!&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./xelatex_zh/pasted_image001.png" /&gt;&lt;/p&gt;
&lt;p&gt;最后把源文件生成好的pdf也放进来吧...
&lt;a href="./xelatex_zh/xelatex_test.tex"&gt;./xelatex_test.tex&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href="./xelatex_zh/xelatex%20%E5%8F%8A%E4%B8%AD%E6%96%87%20Gummi%20%E5%9C%A8%20ubuntu%20%E4%B8%8A%E7%9A%84%E9%85%8D%E7%BD%AE.pdf"&gt;./xelatex 及中文 Gummi 在 ubuntu 上的配置.pdf&lt;/a&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt; &lt;/p&gt;</summary><category term="tex"></category><category term="geany"></category><category term="中文乱码"></category></entry><entry><title>chrome护眼设置--把背景设置为绿豆沙</title><link href="http://x-wei.github.com/chrome-background.html" rel="alternate"></link><updated>2012-02-23T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/chrome-background.html</id><summary type="html">&lt;p&gt;直接把&lt;a href="http://hi.baidu.com/laolao18k/blog/item/3a268016cd4c4907c83d6d46.html"&gt;这里&lt;/a&gt;的贴上吧...
(以下为copy)&lt;/p&gt;
&lt;p&gt;首先，下载安装chrome的&lt;a href="https://chrome.google.com/extensions/detail/pabfempgigicdjjlccdgnbmeggkbjdhd"&gt;stylist插件&lt;/a&gt;
然后，打开"扩展设置"，点击chrome stylist的选项，点击demo进行修改。 &lt;/p&gt;
&lt;p&gt;把网页背景修改为豆沙绿的参数设置: 
输入框1：demo 选项框2：regexp 输入框3：(ftp|http|https)://\D 输入框4： * { background: #C7EDCC !important; } 修改后保存即可 (url和style text可根据自己喜好配置) 
附：豆沙绿的参数 RGB颜色 199；237；204 十六位颜色代码 #C7EDCC 色调：85；饱和度：123；亮度：205 &lt;/p&gt;
&lt;p&gt;不会的话直接用&lt;a href="https://chrome.google.com/extensions/detail/hnjebfhieiaohnhafcolehbbcfkkkhje#%E5%AE%83%E9%99%A4%E4%BA%86%E6%8A%8AGoogle%E7%9A%84%E8%83%8C%E6%99%AF%E6%94%B9%E4%B8%BA%E4%BF%9D%E6%8A%A4%E7%9C%BC%E7%9D%9B%E7%9A%84%E7%BB%BF%E8%89%B2%EF%BC%8C%E4%BB%96%E6%B2%A1%E6%9C%89%E5%88%AB%E7%9A%84%E5%8A%9F%E8%83%BD"&gt;这个扩展&lt;/a&gt;。
&lt;img alt="" src="./chrome-background/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="google"></category><category term="外观"></category></entry><entry><title>gnome护眼设置--窗口背景设置为绿豆沙</title><link href="http://x-wei.github.com/gnome-background.html" rel="alternate"></link><updated>2012-02-23T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/gnome-background.html</id><summary type="html">&lt;p&gt;我就说win能做到ubuntu也能~&lt;/p&gt;
&lt;p&gt;主题--&amp;gt;自定义--&amp;gt;颜色&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./gnome-background/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;修改窗口和输入框两项的颜色:
126-12-91&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./gnome-background/pasted_image002.png" /&gt;&lt;/p&gt;
&lt;p&gt;现在就很舒服了&lt;/p&gt;
&lt;p&gt;然后貌似nautils要再设置一下:
编辑--&amp;gt;背景和徽标--&amp;gt;颜色--&amp;gt;把那个绿豆沙颜色加进去&lt;/p&gt;
&lt;p&gt;再加上[chrome的设置], 嗯 就完美了!&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="外观"></category></entry><entry><title>用du命令查看各目录大小</title><link href="http://x-wei.github.com/use_du_shell.html" rel="alternate"></link><updated>2012-02-14T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/use_du_shell.html</id><summary type="html">&lt;p&gt;du用来计算目录的磁盘用量. 具体的参数可以用man或者--help, 这里不贴了(其实我也没仔细看...). 今天看见水源上有人说 用 -sh这个参数比较好:&lt;/p&gt;
&lt;p&gt;-s: 只计算各个目录的总用量(就是说不要递归操作) 后面跟着&lt;em&gt;或者.&lt;/em&gt;就可以查看各个目录的大小了.
-h: 易于查看的方式&lt;/p&gt;
&lt;p&gt;比如~/目录经常不知道为什么空间在减少, 那就运行:&lt;/p&gt;
&lt;p&gt;&lt;code&gt;du -sh ~/*&lt;/code&gt; 以及 &lt;code&gt;du -sh /.*&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;即可&lt;/p&gt;
&lt;p&gt;有时候文件夹比较多的情况, 还是不容易发现那个文件夹占用了大部分空间, 这时用sort命令对du的结果进行排序就行了!
参考了&lt;a href="http://www.xn--b0t733db8c.com/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F/12950504311.html"&gt;这里&lt;/a&gt;, 顺便学会了: 两条一起执行是用"|"进行分割的.&lt;/p&gt;
&lt;p&gt;所以命令为:&lt;/p&gt;
&lt;div class="codehilite"&gt;&lt;pre&gt;&lt;span class="n"&gt;du&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;sm&lt;/span&gt; &lt;span class="o"&gt;~/*&lt;/span&gt; &lt;span class="o"&gt;|&lt;/span&gt; &lt;span class="nb"&gt;sort&lt;/span&gt; &lt;span class="o"&gt;-&lt;/span&gt;&lt;span class="n"&gt;nr&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;注意这时du不能用-h参数, 因为这样的话文件可能是以M为单位也可能是以k为单位, 而sort的时候只看前面的数字值, 不看单位. 用-m参数, 表示让所有结果以M为单位显示.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="shell"></category></entry><entry><title>把抓图工具关联到ubuntu快捷键</title><link href="http://x-wei.github.com/scrshot-shortcut.html" rel="alternate"></link><updated>2012-01-10T00:00:00+08:00</updated><author><name>X.Wei</name></author><id>http://x-wei.github.com/scrshot-shortcut.html</id><summary type="html">&lt;p&gt;终端输入gnome-screenshot --help, 发现选项"-a"表示的是抓取一部分屏幕.&lt;/p&gt;
&lt;p&gt;于是打开编辑键盘快捷键窗口, 新建一个快捷键如下图:&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./scrshot-shortcut/pasted_image.png" /&gt;&lt;/p&gt;
&lt;p&gt;这样, 按下Ctrl+Alt+s快捷键后即可启动抓图, 且是抓取一个区域. 不过不知为什么, 反应比较慢, 需要按下一段时间  (一秒钟?)才会有反应.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;02/23/2012续:&lt;/strong&gt;
安装了lucid之后不好使了!
症状就是, 参数-a不起作用, 按下快捷键后直接出来桌面截图, 如果一直按着的话会出来选取区域的, 但是此时已经把桌面截了N次了!.... 无语啊!&lt;/p&gt;
&lt;p&gt;上网搜了好久,终于在&lt;a href="http://www.nenew.net/ubuntu-linux-gnome-screenshot-area.html"&gt;奶牛的博客&lt;/a&gt;里看见了方法: 命令参数变成 -ai, 这样每次按下快捷键后会先弹出来交互界面... 也罢...&lt;/p&gt;
&lt;p&gt;我非常无语...&lt;/p&gt;
&lt;p&gt;&lt;img alt="" src="./scrshot-shortcut/pasted_image001.png" /&gt;&lt;/p&gt;
&lt;p&gt;嗯 就这样吧~...&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;--imported from zim&lt;/strong&gt;&lt;/p&gt;</summary><category term="tips"></category><category term="快捷键"></category></entry></feed>